class T101BNv3
{
    inputs = ();
    outputs = ();
    node_size = (80 40);
    HR_DBN_Num_Slices = "5";
    HR_Desc = "";
    HR_OOBN_CheckConsistency = "1";
    HR_OOBN_FitExpand = "1";
    HR_Zoom_ZoomFactor = "100";
    HR_Groups_GroupColors = "";
    HR_Groups_GroupNames = "";
    HR_Groups_UserGroupsNo = "0";
    HR_Utility_Link = "63";
    HR_Probabilistic_Link = "63";
    HR_Functional_Link = "63";
    HR_Binding_Link = "63";
    HR_Information_Arc = "63";
    HR_Color_Interface = "21";
    HR_Color_Instance = "0";
    HR_Color_DiscreteFunction = "5";
    HR_Color_Function = "4";
    HR_Color_Utility = "36";
    HR_Color_Decision = "17";
    HR_Color_ContinuousChance = "48";
    HR_Color_DiscreteChance = "16";
    HR_Monitor_InitSD = "2";
    HR_Monitor_Utility_Arrange = "0";
    HR_Monitor_Mean_Variance = "1";
    HR_Monitor_Chance_Utility = "1";
    HR_Monitor_InitStates = "5";
    HR_Monitor_OpenGraph = "0";
    HR_Monitor_GraphPrecision = "100";
    HR_Monitor_AutoUpdGraph = "0";
    HR_Compile_MaxMinimalSeparators = "100000";
    HR_Compile_ApproxEpsilon = "1.0E-5";
    HR_Compile_Approximate = "0";
    HR_Compile_SaveToMemory = "0";
    HR_Compile_Compress = "0";
    HR_Compile_TriangMethod = "0";
    HR_Propagate_AutoNormal = "1";
    HR_Propagate_AutoSum = "1";
    HR_Propagate_Auto = "1";
    HR_Font_Italic = "0";
    HR_Font_Weight = "400";
    HR_Font_Size = "-12";
    HR_Font_Name = "javax.swing.plaf.FontUIResource[family=Dialog,name=Dialog,style=bold,size=12]";
    HR_Grid_GridShow = "0";
    HR_Grid_GridSnap = "0";
    HR_Grid_Y = "40";
    HR_Grid_X = "40";

    node Pos_2
    {
	label = "";
	position = (545 93);
	states = ("A" "B" "C" "D");
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_LinkControlPoints = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_LinkGroup = "[SA_2:0][SDist_2:0]";
	HR_LinkMode = "[SA_2:0][SDist_2:0]";
	HR_Group = "0";
    }

    node SDist_2
    {
	label = "";
	position = (597 135);
	states = ("" "" "");
	subtype = interval;
	state_values = (100 111 121 130);
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "Sensor: Distance\n\nThis is the distance in an interval";
	HR_State_2 = "";
	HR_LinkGroup = "";
	HR_LinkMode = "";
	HR_Group = "0";
    }

    node SA_2
    {
	label = "";
	position = (505 134);
	states = ("-45" "-40" "-35" "-30" "-25");
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "Sensor: Angle\n\nTurret angle relative to start\nRight is negative\nLeft is positive\n";
	HR_LinkGroup = "";
	HR_LinkMode = "";
	HR_Group = "0";
    }

    node Pos_1
    {
	label = "";
	position = (359 94);
	states = ("A" "B" "C" "D");
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_LinkControlPoints = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "";
	HR_LinkGroup = "[Pos_2:0][SA_1:0][SDist_1:0]";
	HR_LinkMode = "[Pos_2:0][SA_1:0][SDist_1:0]";
	HR_Group = "0";
    }

    node SDist_1
    {
	label = "";
	position = (411 139);
	states = ("" "" "");
	subtype = interval;
	state_values = (100 111 121 130);
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "Sensor: Distance\n\nThis is the distance in an interval";
	HR_State_2 = "";
	HR_LinkGroup = "";
	HR_LinkMode = "";
	HR_Group = "0";
    }

    node SA_1
    {
	label = "";
	position = (319 138);
	states = ("-45" "-40" "-35" "-30" "-25");
	HR_State_0 = "";
	HR_State_1 = "";
	HR_Desc = "";
	HR_State_2 = "";
	HR_State_3 = "";
	HR_State_4 = "Sensor: Angle\n\nTurret angle relative to start\nRight is negative\nLeft is positive\n";
	HR_LinkGroup = "";
	HR_LinkMode = "";
	HR_Group = "0";
    }

    node SA
    {
	label = "";
	position = (99 139);
	states = ("-45" "-40" "-35" "-30" "-25");
	HR_LinkMode = "";
	HR_LinkGroup = "";
	HR_State_4 = "Sensor: Angle\n\nTurret angle relative to start\nRight is negative\nLeft is positive\n";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_Group = "0";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    node SDist
    {
	label = "";
	position = (196 140);
	states = ("" "" "");
	subtype = interval;
	state_values = (100 111 121 130);
	HR_LinkMode = "";
	HR_LinkGroup = "";
	HR_State_2 = "";
	HR_Group = "0";
	HR_Desc = "Sensor: Distance\n\nThis is the distance in an interval";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    node Velocity
    {
	label = "";
	position = (353 20);
	states = ("" "" "");
	subtype = number;
	state_values = (20 30 40);
	HR_LinkControlPoints = "";
	HR_LinkGroup = "[Pos:0][Pos_1:0][Pos_2:0]";
	HR_LinkMode = "[Pos_0:0][Pos:0][Pos_1:0][Pos_2:0]";
	HR_Group = "0";
	HR_Desc = "";
	HR_State_2 = "";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    node Pos
    {
	label = "";
	position = (144 95);
	states = ("A" "B" "C" "D");
	HR_State_4 = "";
	HR_State_3 = "";
	HR_State_2 = "";
	HR_LinkControlPoints = "";
	HR_LinkMode = "[SDist:0][SA:0][Pos_1:0]";
	HR_LinkGroup = "[SDist:0][SA:0][Pos_1:0]";
	HR_Group = "0";
	HR_Desc = "";
	HR_State_1 = "";
	HR_State_0 = "";
    }

    potential (Pos_2 | Pos_1 Velocity)
    {
	data = ((( 0.8 0.2 0 0 )	%  Pos_1=A  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos_1=A  Velocity=30
		 ( 0.1 0.8 0.1 0 ))	%  Pos_1=A  Velocity=40
		(( 0.8 0.2 0 0 )	%  Pos_1=B  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos_1=B  Velocity=30
		 ( 0.1 0.8 0.1 0 ))	%  Pos_1=B  Velocity=40
		(( 0.8 0.2 0 0 )	%  Pos_1=C  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos_1=C  Velocity=30
		 ( 0.1 0.8 0.1 0 ))	%  Pos_1=C  Velocity=40
		(( 0.8 0.2 0 0 )	%  Pos_1=D  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos_1=D  Velocity=30
		 ( 0.1 0.8 0.1 0 )));	%  Pos_1=D  Velocity=40
    }

    potential (SDist_2 | Pos_2)
    {
	data = (( 0 0.3 0.7 )	%  Pos_2=A
		( 0.3 0.5 0.2 )	%  Pos_2=B
		( 0.5 0.4 0.1 )	%  Pos_2=C
		( 0.9 0.1 0 ));	%  Pos_2=D
    }

    potential (SA_2 | Pos_2)
    {
	data = (( 1 1 1 0 0 )	%  Pos_2=A
		( 0 1 1 1 0 )	%  Pos_2=B
		( 0 0 1 1 1 )	%  Pos_2=C
		( 0 0 0 1 1 ));	%  Pos_2=D
    }

    potential (Pos_1 | Pos Velocity)
    {
	data = ((( 0.8 0.2 0 0 )	%  Pos=A  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos=A  Velocity=30
		 ( 0.1 0.8 0.1 0 ))	%  Pos=A  Velocity=40
		(( 0.8 0.2 0 0 )	%  Pos=B  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos=B  Velocity=30
		 ( 0.1 0.8 0.1 0 ))	%  Pos=B  Velocity=40
		(( 0.8 0.2 0 0 )	%  Pos=C  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos=C  Velocity=30
		 ( 0.1 0.8 0.1 0 ))	%  Pos=C  Velocity=40
		(( 0.8 0.2 0 0 )	%  Pos=D  Velocity=20
		 ( 0.4 0.6 0 0 )	%  Pos=D  Velocity=30
		 ( 0.1 0.8 0.1 0 )));	%  Pos=D  Velocity=40
    }

    potential (SDist_1 | Pos_1)
    {
	data = (( 0 0.3 0.7 )	%  Pos_1=A
		( 0.3 0.5 0.2 )	%  Pos_1=B
		( 0.5 0.4 0.1 )	%  Pos_1=C
		( 0.9 0.1 0 ));	%  Pos_1=D
    }

    potential (SA_1 | Pos_1)
    {
	data = (( 1 1 1 0 0 )	%  Pos_1=A
		( 0 1 1 1 0 )	%  Pos_1=B
		( 0 0 1 1 1 )	%  Pos_1=C
		( 0 0 0 1 1 ));	%  Pos_1=D
    }

    potential (SA | Pos)
    {
	data = (( 1 1 1 0 0 )	%  Pos=A
		( 0 1 1 1 0 )	%  Pos=B
		( 0 0 1 1 1 )	%  Pos=C
		( 0 0 0 1 1 ));	%  Pos=D
    }

    potential (SDist | Pos)
    {
	data = (( 0 0.3 0.7 )	%  Pos=A
		( 0.3 0.5 0.2 )	%  Pos=B
		( 0.5 0.4 0.1 )	%  Pos=C
		( 0.9 0.1 0 ));	%  Pos=D
    }

    potential (Velocity)
    {
	data = ( 1 1 1 );
    }

    potential (Pos | Velocity)
    {
	data = (( 0.8 0.2 0 0 )	%  Velocity=20
		( 0.4 0.6 0 0 )	%  Velocity=30
		( 0.1 0.8 0.1 0 ));	%  Velocity=40
    }
} % class T101BNv3
