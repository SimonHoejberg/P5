const byte camPort = IN_1;

#define CAMADDR 0x02
#include "nxtcamlib-default.nxc"

int turn = 0;
int nblobs;
bool searching = true;

void Left(int power, int angle);
void Right(int power, int angle);
void LoadRound();
void Fire();
int GetAngle(int distance);
void Angle(int angle);
task rotate();
task shoot();
task Track();

task main(){
  SetSensorUltrasonic(S2);
  //Precedes(Track, rotate, shoot);
  StartTask(Track);
    //int dis = SensorUS(S2);
    //int angle = GetAngle(dis);
    //int i = 0;
    //for(i;i<6;i++){
        //TurnLeft(45,70);
        //LoadRound();
        //AngleUp(60,angle);
        //Wait(250);
        //Wait(200);
        //Fire();
        //Wait(200);
        //AngleDown(60,angle);
        //Wait(500);
        //TurnRight(45,70);
        //Fire();
        //AngleDown(80,100);
    //}

}

task search(){
  searching = true;
  if(turn == 1){
    OnRev(OUT_A, 35);
  }
  else if(turn == 2 || turn == 0){
    OnFwd(OUT_A, 35);
  }
}

task rotate(){
int dis, newAngle;
PosRegEnable(OUT_B);
SetMotorRegulationTime(50);
while(true){
    dis = SensorUS(S2);
    newAngle = GetAngle(dis);
    Angle(newAngle);
    Wait(250);
  }
}

task shoot(){
  for(int i = 0; i < 6; i++){
    while(searching){}
    LoadRound();
    Fire();
    Wait(1000);
  }
  PosRegSetAngle(OUT_B,0);
  StopAllTasks();
}

void Left(int power, int angle){
    RotateMotor(OUT_A,power,angle);
}

void Right(int power, int angle){
    RotateMotor(OUT_A,power,-angle);
}

void Angle(int angle){
  int pos = 5*angle;
  PosRegSetAngle(OUT_B, -pos);
}

void LoadRound(){
    RotateMotor(OUT_C,100,-90);
}

void Fire(){
    RotateMotor(OUT_C,100,90);
}

int GetAngle(int distance){
  float dis = distance/100;
  int res = 6.5593*(dis*dis)-(0.9564*dis)+0.0607;
  return res;
}

task Track(){
  int bc[10];
  int bl[10];
  int bt[10];
  int br[10];
  int bb[10];
  string msg;

  int init;
  init = NXTCam_Init(camPort, CAMADDR);

  NXTCam_SendCommand(camPort, CAMADDR, 'E');
  Wait(250);
  while(true){
    NXTCam_GetBlobs(camPort, CAMADDR, nblobs, bc, bl, bt, br, bb);
    int center = (bl[0] + br[0])/2;
    if(nblobs > 0){
      StopTask(search);
      searching = false;
      Off(OUT_A);
      if(center > 82 || center < 62){
        if(center > 82){
          Left(60,10);
          turn = 1;
          Wait(250);
        }
        else if(center < 62){
          Right(60,10);
          turn = 2;
          Wait(250);
        }
      }
    }
    else if(nblobs <= 0){
      StartTask(search);
    }
  }
}
